// This file is @generated by prost-build.
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct BookRecommendation {
    #[prost(string, tag = "1")]
    pub id: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub title: ::prost::alloc::string::String,
    #[prost(string, repeated, tag = "3")]
    pub authors: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    #[prost(string, repeated, tag = "4")]
    pub genres: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Success {
    #[prost(message, repeated, tag = "1")]
    pub recommendations: ::prost::alloc::vec::Vec<BookRecommendation>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Response {
    #[prost(oneof = "response::ResponseField", tags = "1, 2")]
    pub response_field: ::core::option::Option<response::ResponseField>,
}
/// Nested message and enum types in `Response`.
pub mod response {
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum ResponseField {
        #[prost(enumeration = "super::Error", tag = "1")]
        Error(i32),
        #[prost(message, tag = "2")]
        Success(super::Success),
    }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Error {
    InvalidCredentials = 0,
    InvalidBookId = 1,
    InvalidGenreLevel = 2,
    InvalidRecommendationNumber = 3,
    TooManyRequests = 4,
    ServerError = 5,
}
impl Error {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::InvalidCredentials => "INVALID_CREDENTIALS",
            Self::InvalidBookId => "INVALID_BOOK_ID",
            Self::InvalidGenreLevel => "INVALID_GENRE_LEVEL",
            Self::InvalidRecommendationNumber => "INVALID_RECOMMENDATION_NUMBER",
            Self::TooManyRequests => "TOO_MANY_REQUESTS",
            Self::ServerError => "SERVER_ERROR",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "INVALID_CREDENTIALS" => Some(Self::InvalidCredentials),
            "INVALID_BOOK_ID" => Some(Self::InvalidBookId),
            "INVALID_GENRE_LEVEL" => Some(Self::InvalidGenreLevel),
            "INVALID_RECOMMENDATION_NUMBER" => Some(Self::InvalidRecommendationNumber),
            "TOO_MANY_REQUESTS" => Some(Self::TooManyRequests),
            "SERVER_ERROR" => Some(Self::ServerError),
            _ => None,
        }
    }
}
