use crate::{views::recommendations, middleware};
use actix_web::web::{get, post, scope, ServiceConfig};

pub fn config(cfg: &mut ServiceConfig) {
    cfg.service(
        scope("/notes/save")
        .wrap(middleware::authentication)
        .route(
            "/audionotes",
            post().to(views::reader::notes::save::save_audionote),
        )
        .route(
            "/highlights",
            post().to(views::reader::notes::save::save_highlight),
        )
        .route(
            "/quotes",
            post().to(views::reader::notes::save::save_audionote),
        )
        .route(
            "/notes",
            post().to(views::reader::notes::save::save_text),
        )
    )
    .service(
        scope("/notes/load")
        .wrap(middleware::authentication)
        .route(
            "/audionotes",
            post().to(views::reader::notes::load::load_audionotes),
        )
        .route(
            "/highlights",
            post().to(views::reader::notes::load::load_highlights),
        )
        .route(
            "/quotes",
            post().to(views::reader::notes::load::load_audionotes),
        )
        .route(
            "/notes",
            post().to(views::reader::notes::load::load_texts),
        )
    )
    .service(
        scope("/notes/delete")
        .wrap(middleware::authentication)
        .route(
            "/audionotes",
            post().to(views::reader::notes::delete::delete_audionote),
        )
        .route(
            "/highlights",
            post().to(views::reader::notes::delete::delete_highlight),
        )
        .route(
            "/quotes",
            post().to(views::reader::notes::delete::delete_audionote),
        )
        .route(
            "/notes",
            post().to(views::reader::notes::delete::delete_text),
        )
    )
    .service(
        scope("/summary")
        .wrap(middleware::authentication)
        .route(
            "/download",
            post().to(views::reader::summary::download)
        )
        .route(
            "/cache",
            post().to(views::reader::summary::cache)
        )
    )
    .service(
        scope("/ruler")
        .wrap(middleware::authentication)
        .route(
            "/get-status",
            post().to(views::reader::place::ruler)
        )
    )
    .service(
        scope("location")
        .wrap(middleware::authentication)
        .route(
            "get-place",
            get().to(views::reader::place)
        )
        .route(
            "set-place",
            post().to(views::reader::place)
        )
    )
    .service(
        scope("chapter")
        .wrap(middleware::authentication)
        .route(
            "get_current",
            post().to(views::reader::place::chapter)
        )
        .route(
            "increment_current",
            post().to(views::reader::place::chapter)
        )
        .route(
            "decrement_current",
            post().to(views::reader::place::chapter)
        )
        .route(
            "set_new",
            post().to(views::reader::place::chapter)
        )
    )
}